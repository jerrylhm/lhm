客户端接口，负责与客户端通信，处理客户端发送的数据和返回数据给客户端
返回json数据格式规定为：{"code":"" , "msg":"" , "data":[] [, "type":"0"]}
注：code:状态码,String    	msg:状态码的文字说明,String   	data:数据,Array    type(可选):发送给客户端或设备的标识(用于nodejs传输)，0:客户端   1:设备


[节点类型操作接口]
 data参数说明: 类型：Array
	 type_id: 节点类型id
	 type_name: 节点类型名称
	 type_name_cn: 节点类型对应的中文名称
	 type_pid: 节点类型的父类型id,0说明没有父类型

getNodeTypeList()
接口说明：获取所有节点类型(如普通节点、设备、文本、图片等)
	

getNodeTypeById(String id)
接口说明：根据类型id获取类型信息
参数： id - 类型id


getTypeChildById(String id)
接口说明：根据类型id查询下一级子类型列表
参数：id - 类型id




[节点树操作接口]
节点data参数说明： 类型Array
	  node_id: 节点id
	  node_userid: 创建节点的用户id
	  node_name: 节点的名称
	  node_pid: 节点的父id,根节点pid为0
	  node_treeid: 节点所对应的树id,即根节点id
	  node_url: 节点对应的跳转链接地址
	  node_type: 节点类型
	  node_protocol: 节点协议，需要是设备的下一级节点，其他为null
	  node_class: 节点属性名称，需要设备节点，其他为null
	  node_sn: 节点设备号，需要设备节点，其他为null


getRootByCreateUserId(String id)
接口说明：根据用户id获取其创建的树根节点列表
参数：  id - 用户id

getRootByUserId(String id)
接口说明：根据用户id获取该用户有权限的根节点列表(包括创建的树)
参数： id - 用户id

getNodeByNodeId(String id)
接口说明：根据节点id获取对应的节点信息
参数： id - 节点id


getChildrenByNodeId(String id)
接口说明：根据节点id查询下一级子节点列表
参数说明： id - 节点id

getAllChildrenByNodeId(String id)
接口说明：根据节点id查询后代节点列表(不包括自身节点)
参数说明： id - 节点id

getPermissChildrenByIds(String nodeid,String userid)
接口说明：根据节点id和用户id查询该用户有权限的下一级节点
参数说明: nodeid - 节点id
		  userid - 用户id

getParentDeviceByNodeid(String id)
接口说明：根据节点获取距离自己最近的父级(或自身)的设备信息
参数说明：id - 节点id

getParentsByNodeId(String id)
接口说明：根据节点id获取父节点列表，可根据数据列表生成树，列表顺序从顶层到底层(包括自身节点)
参数说明：id - 节点id

getDescentantsByClassName(String id,String className)
接口说明：根据类名和节点id查询后代指定类名设备列表，包括普通节点和设备，可根据该列表生成树(不包括该节点)
参数说明：id - 节点id
		  className - 类别名称，如"空调"


getDeviceByClassName(String id,String className)
接口说明：根据节点id和类名获取后代的设备(设备，不包括普通节点)
参数说明：id - 节点id
		  className - 类别名称，如"空调"


getDescentantsByNodeType(String id,String type)
接口说明：根据节点id和节点类型获取后代子节点列表(不包括自身节点)
参数说明： id - 节点id
		   type -节点类型(1、普通节点  2、设备   3、文本  4、图片   5、视频  6、枚举   7、枚举动作  8、表格  9、图表  10、滑块   11、动作 )
返回说明：后代普通节点和指定类型节点，如果没有指定类型节点，则全部都是普通节点


getChildrenByNodeType(String id,String type)
接口说明： 根据节点id和节点类型获取下一级指定的类型节点
参数说明： id - 节点id
		   type -节点类型(1、普通节点  2、设备   3、文本  4、图片   5、视频  6、枚举   7、枚举动作  8、表格  9、图表  10、滑块   11、动作 )

getNodesByNodeType(String id,String type)
接口说明：根据节点id和节点类型查询后代所有指定类型节点，不包括普通节点
参数说明： id - 节点id
		   type -节点类型(1、普通节点  2、设备   3、文本  4、图片   5、视频  6、枚举   7、枚举动作  8、表格  9、图表  10、滑块   11、动作 )


uploadResourceByNodeId(String id)
接口说明：根据节点id上传资源(图片或视频资源)，成功则返回资源链接地址(注：表单中的input[type=file] name必须为file)
参数说明： id - 节点id
返回说明：data参数说明,类型Array
		data:[{"relative":""},{"complete":""}]    relative:上传成功后资源的相对网站地址    complete:上传成功后资源的完整地址(包括网址和接口)
示例：{"code":"0000","msg":"成功","data":[{"complete":"http://localhost:8080/Tree/upload/resource/2018-03-20/res_1521516084653.jpg","relative":"upload/resource/2018-03-20/			res_1521516084653.jpg"}]}


uploadResource()
接口说明：上传资源(图片或者视频资源),，成功则返回资源链接地址,不需要参数(注：表单中的input[type=file] name必须为file)
返回说明：data参数说明,类型Array
		data:[{"relative":""},{"complete":""}]    relative:上传成功后资源的相对网站地址    complete:上传成功后资源的完整地址(包括网址和接口)
示例：{"code":"0000","msg":"成功","data":[{"complete":"http://localhost:8080/Tree/upload/resource/2018-03-20/res_1521516084653.jpg","relative":"upload/resource/2018-03-20/			res_1521516084653.jpg"}]}


getResourceUrlByNodeId(String id)
接口说明：根据节点获取节点对应的资源链接
参数说明：id - 节点id
返回说明：data参数说明,类型Array
		data:[{"relative":""},{"complete":""}]    relative:上传成功后资源的相对网站地址    complete:上传成功后资源的完整地址(包括网址和接口)
示例：{"code":"0000","msg":"成功","data":[{"complete":"http://localhost:8080/Tree/upload/resource/2018-03-20/res_1521516084653.jpg","relative":"upload/resource/2018-03-20/			res_1521516084653.jpg"}]}




[节点数据操作接口]
数据data 参数说明：类型Array
	  value_id: 数据id
	  value_nodeid: 数据对应的节点id
	  value_data: 数据对应的json字符串，json的键由用户自定义

getValueByNodeId(String id)
接口说明：根据节点id查询对应的数据列表
参数说明：id - 节点id

getLastValueByNodeId(String id)
接口说明：根据节点id获取最新的节点对应的数据
参数说明：id - 节点id



[与nodeJs交互接口]


getDeviceSNByNodeId(String nodeid,String userid)
接口说明：根据节点id查询对应设备的父级或自身设备的sn号(提供给客户端的NodeJs使用，不提供给客户端)
参数说明：nodeid - 节点id
		  userid - 用户id
返回说明：json格式：{"sn":"" , "userid":"" , "code":"" , "msg":"" , "data":[]}
		sn：设备的SN号    userid:用户id  code:状态码    msg:说明     data:数据，为空
示例：{"code":"0000","msg":"成功","data":[],"sn":"123456","userid":"1"}


controlDevice(String nodeid,String userid)
接口说明：客户端发送指令(触发动作)控制设备，不成功则将错误信息发送给客户端，成功则将自定义协议发送给设备，设备对协议解析处理
参数说明：nodeid - 节点id
		  userid - 用户id
返回说明：不成功：{"code":String,"msg":String,"data":Array,"type":String,"userid":String}
	code:标识码,0000为成功         msg:标识码的中文说明    data:数据，返回客户端的数据为空       type:客户端标识           userid:用户id
	  
	成功: {"code":String,"msg":String,"data":Array,"type":String,"sn":String}
	code:标识码   msg:标识码的中文说明    data:数组,存放自定义协议    type:设备标识       sn:设备的SN号
示例：{"code":"0000","msg":"成功","data":[{"code":"if(status==1){status=2}","time":"2018-03-14"}],"type":"1","sn":"123456"}




[属性模板操作接口]



getTemplateListByTreeId(String id)
接口说明：根据树根节点id查询该树拥有的所有属性模板列表
参数说明：id - 树根节点id
示例：{"code":"0000","msg":"成功","data":[{"name":"名称","type":"text"},{"name":"功能","type":"enum","option":"1,2,3,4"},{"name":"搞J","type":"boolean"},{"name":"****		的视频","type":"file"}]","tp_treeid":168}]}
返回说明：data参数说明：类型Array
		 tp_id: 模板id
		 tp_name: 模板的名称
		 tp_data: 模板数据，是一个json格式的字符串，格式为{"name":"","type":"" [,"option":"选项1,选项2"]}，
		          键name为属性名称,type为属性类型，分为四种类型:text(文本)、boolean(布尔型)、file(文件类型)、enum(枚举，它的选项对应的键为option)
		 tp_treeid:  模板对应的节点id



changeTemplateContent(String templateid,String nodeid,String content,String userid)
接口说明：根据模板id和节点id添加或修改模板内容，当有相应的数据，则修改数据，没有则添加数据
参数说明：templateid 模板id
	 	  nodeid 节点id
	 	  content 属性内容，参数类型必须为json格式的字符串，如{"key":"value"},key对应的模板的属性名，value对应用户填入的属性值
	      userid 用户id，填写该属性表单的用户
返回说明：返回添加或者修改的模板内容
	data参数说明:类型Array
	  tpc_id： 数据内容id
	  tpc_tpid: 内容对应的模板id
	  tpc_nodeid: 内容对应的节点id
	  tpc_content: 数据内容
	  tpc_content: 填写该数据内容的用户id
	  tpc_date: 填写日期
示例：{"code":"0000","msg":"成功","data":[{"tpc_id":3,"tpc_tpid":17,"tpc_nodeid":169,"tpc_content":"{"key":"value"}","tpc_userid":1,"tpc_date":"2018-03-19"}]}


getTemplateByNodeId(String id)
接口说明：根据节点id查询对应的模板(不包含用户填写的模板数据内容)
参数说明： id - 节点id
返回说明：
		data参数说明：
		 tp_id: 模板id
		 tp_name: 模板的名称
		 tp_data: 模板数据，是一个json格式的字符串，格式为{"name":"","type":"" [,"option":"选项1,选项2"]}，
		          键name为属性名称,type为属性类型，分为四种类型:text(文本)、boolean(布尔型)、file(文件类型)、enum(枚举，它的选项对应的键为option)
		 tp_treeid:  模板对应的节点id



 getTpContentByNodeIdAndTpId(String nodeid,String templateid)
 接口说明：根据节点id和模板id获取用户填写的模板数据
 参数说明：nodeid - 节点id
 		   templateid - 模板id
返回说明：data参数说明:类型Array
	  tpc_id： 数据内容id
	  tpc_tpid: 内容对应的模板id
	  tpc_nodeid: 内容对应的节点id
	  tpc_content: 数据内容
	  tpc_content: 填写该数据内容的用户id
	  tpc_date: 填写日期